/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package purejs;

import edu.prl.kramerlab.script.JavascriptEngine;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.script.ScriptException;
import javax.swing.BoxLayout;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.BevelBorder;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rtextarea.RTextScrollPane;

/**
 *
 * @author CCHall
 */
public class PureJSWindow extends javax.swing.JFrame {

	private JavascriptEngine engine;
	
	private final JFileChooser fileChooser;
	
	private final javax.swing.DefaultListModel<String> varListModel;
	
	private RSyntaxTextArea scriptArea = null;
	/**
	 * Creates new form PureJSWindow
	 */
	public PureJSWindow() {
		initScriptEngine();
		fileChooser = new JFileChooser();
		initComponents();
		addSyntaxTextArea();
		logArea.setFont(Font.decode("Courier New"));
		
		this.setLocationRelativeTo(null);
		varListModel = new javax.swing.DefaultListModel<>();
		this.varList.setModel(varListModel);
	}

	private void clearLog() {
		outputArea.setText("");
	}

	private void updateVariablesList() {
		Map<String, Object> vars = engine.getAllBindings();
		varListModel.clear();
		for(String key : vars.keySet()){
			varListModel.addElement(key);
		}
		showSelectedVariable();
	}

	private void showSelectedVariable() {
		int selectedIndex = varList.getSelectedIndex();
		if(selectedIndex < 0){
			varValField.setText("");
			return;
		}
		Map<String, Object> vars = engine.getAllBindings();
		this.varValField.setText(vars.get(varListModel.elementAt(selectedIndex)).toString());
	}

	private void addSyntaxTextArea() {
		scriptArea = new RSyntaxTextArea(10, 20);
		scriptArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVASCRIPT);
		scriptArea.setCodeFoldingEnabled(true);
		scriptArea.setAntiAliasingEnabled(true);
		RTextScrollPane sp = new RTextScrollPane(scriptArea);
		sp.setFoldIndicatorEnabled(true);
		scriptPane.setLayout(new BorderLayout());
		scriptPane.add(sp);
	}

	private void initScriptEngine() {
		try {
			engine = new JavascriptEngine();
			engine.bindMethod(this, "println", Object.class);
			engine.bindMethod(this, "print", Object.class);
		} catch (NoSuchMethodException ex) {
			Logger.getLogger(PureJSWindow.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	public void println(Object o){
		print(o.toString());
		this.outputArea.append("\n");
	}
	public void print(Object o){
		this.outputArea.append(o.toString());
	}
	
	

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        runButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        seeVarsButton = new javax.swing.JButton();
        logScrollPane = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        scriptPane = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        clearLogButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JTextArea();
        varValField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        varList = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenuItem = new javax.swing.JMenu();
        importFileMenuItem = new javax.swing.JMenuItem();
        resetMenuItem = new javax.swing.JMenuItem();
        saveLogMenuItem = new javax.swing.JMenuItem();
        quitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pure JS - Javascript without a web browser");

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel1.setPreferredSize(new java.awt.Dimension(638, 300));

        runButton.setText("Eval");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter JavaScript here and then click 'Eval':");

        seeVarsButton.setText("See Global Variables");
        seeVarsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeVarsButtonActionPerformed(evt);
            }
        });

        logArea.setEditable(false);
        logArea.setColumns(20);
        logArea.setForeground(new java.awt.Color(102, 102, 102));
        logArea.setRows(5);
        logScrollPane.setViewportView(logArea);

        jLabel5.setText("Log:");

        scriptPane.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout scriptPaneLayout = new javax.swing.GroupLayout(scriptPane);
        scriptPane.setLayout(scriptPaneLayout);
        scriptPaneLayout.setHorizontalGroup(
            scriptPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        scriptPaneLayout.setVerticalGroup(
            scriptPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 159, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(seeVarsButton)
                .addGap(18, 18, 18)
                .addComponent(runButton))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scriptPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addGap(0, 575, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scriptPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(runButton)
                    .addComponent(seeVarsButton)))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        clearLogButton.setText("Clear Log");
        clearLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearLogButtonActionPerformed(evt);
            }
        });

        outputArea.setEditable(false);
        outputArea.setColumns(20);
        outputArea.setRows(5);
        jScrollPane1.setViewportView(outputArea);

        varValField.setEditable(false);

        jLabel2.setText("Value:");

        varList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                varListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(varList);

        jLabel3.setText("Bindings:");

        jLabel4.setText("Output:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clearLogButton)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 124, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(varValField, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(clearLogButton)
                        .addComponent(varValField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap())))
        );

        jSplitPane1.setRightComponent(jPanel2);

        fileMenuItem.setText("File");

        importFileMenuItem.setText("Import file");
        importFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importFileMenuItemActionPerformed(evt);
            }
        });
        fileMenuItem.add(importFileMenuItem);

        resetMenuItem.setText("Reset script engine");
        resetMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetMenuItemActionPerformed(evt);
            }
        });
        fileMenuItem.add(resetMenuItem);

        saveLogMenuItem.setText("Save log...");
        saveLogMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveLogMenuItemActionPerformed(evt);
            }
        });
        fileMenuItem.add(saveLogMenuItem);

        quitMenuItem.setText("Quit");
        quitMenuItem.setToolTipText("");
        quitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitMenuItemActionPerformed(evt);
            }
        });
        fileMenuItem.add(quitMenuItem);

        menuBar.add(fileMenuItem);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitMenuItemActionPerformed
        quit();
    }//GEN-LAST:event_quitMenuItemActionPerformed

    private void resetMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetMenuItemActionPerformed
        initScriptEngine();
		this.updateVariablesList();
    }//GEN-LAST:event_resetMenuItemActionPerformed

    private void importFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importFileMenuItemActionPerformed
		if(scriptArea == null) return; // sanity check
		int action = fileChooser.showOpenDialog(this);
		if(action != JFileChooser.CANCEL_OPTION && fileChooser.getSelectedFile() != null){
			File f = fileChooser.getSelectedFile();
			try{
				this.scriptArea.setText(readFile(f));
			} catch(IOException ex){
				handleError(ex);
			}
		}
    }//GEN-LAST:event_importFileMenuItemActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
       evalScript();
    }//GEN-LAST:event_runButtonActionPerformed

    private void seeVarsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeVarsButtonActionPerformed
        showVars();
    }//GEN-LAST:event_seeVarsButtonActionPerformed

    private void clearLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearLogButtonActionPerformed
        clearLog();
    }//GEN-LAST:event_clearLogButtonActionPerformed

    private void varListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_varListValueChanged
        showSelectedVariable();
    }//GEN-LAST:event_varListValueChanged

    private void saveLogMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveLogMenuItemActionPerformed
        int action = fileChooser.showSaveDialog(this);
		if(action != JFileChooser.CANCEL_OPTION && fileChooser.getSelectedFile() != null){
			File f = fileChooser.getSelectedFile();
			List<String> text = Arrays.asList(this.logArea.getText().split("\n"));
			try {
				Files.write(f.toPath(), text, Charset.forName("UTF-8"));
			} catch (IOException ex) {
				this.handleError(ex);
			}
		}
    }//GEN-LAST:event_saveLogMenuItemActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(PureJSWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(PureJSWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(PureJSWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(PureJSWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
        //</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new PureJSWindow().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearLogButton;
    private javax.swing.JMenu fileMenuItem;
    private javax.swing.JMenuItem importFileMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea logArea;
    private javax.swing.JScrollPane logScrollPane;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTextArea outputArea;
    private javax.swing.JMenuItem quitMenuItem;
    private javax.swing.JMenuItem resetMenuItem;
    private javax.swing.JButton runButton;
    private javax.swing.JMenuItem saveLogMenuItem;
    private javax.swing.JPanel scriptPane;
    private javax.swing.JButton seeVarsButton;
    private javax.swing.JList varList;
    private javax.swing.JTextField varValField;
    // End of variables declaration//GEN-END:variables

	private void quit() {
		this.setVisible(false);
		this.dispose();
		System.exit(0);
	}

	private void handleError(Exception ex) {
		StringBuilder sb = new StringBuilder();
		if(ex instanceof ScriptException)sb.append("Error on line").append(((ScriptException)ex).getLineNumber());
		sb.append(ex.getMessage());
		if(ex.getMessage().endsWith("\n") == false){
			sb.append("\n");
		}
	//	for(StackTraceElement e : ex.getStackTrace()){
	//		sb.append("\t").append(e.toString()).append("\n");
	//	}
		this.outputArea.append(sb.toString());
	}

	private String readFile(File f) throws IOException{
		try(FileReader fread = new FileReader(f)){
			BufferedReader in = new BufferedReader(fread);
			StringBuilder sb = new StringBuilder();
			String line;
			while((line = in.readLine()) != null){
				sb.append(line).append("\n");
			}
			return sb.toString();
		}
	}

	private void evalScript() {
		if(scriptArea == null) return; // sanity check
		String script = scriptArea.getText();
		try{
			logArea.append(script);
			if(script.endsWith("\n") == false){logArea.append("\n");}
			engine.eval(script);
			scriptArea.setText("");
		}catch(ScriptException ex){
			this.handleError(ex);
		}
		updateVariablesList();
	}

	
	private JDialog dialogWindow = null;
	private synchronized void showVars() {
		if(dialogWindow == null){
			dialogWindow = new javax.swing.JDialog(this, true);
		}
		Map<String, Object> globalVariables = engine.getAllBindings();
		JPanel panel  = new JPanel();
		panel.setLayout(new BoxLayout(panel,BoxLayout.Y_AXIS));
		for(String key : globalVariables.keySet()){
			if(key == null) continue;
			System.out.println(key+"="+globalVariables.get(key));
			JPanel entry = new JPanel();
			entry.setLayout(new FlowLayout());
			entry.setBorder(new BevelBorder(BevelBorder.RAISED));
			JLabel varLabel = new JLabel(key);
			varLabel.setFont(varLabel.getFont().deriveFont(Font.BOLD));
			entry.add(varLabel);
			entry.add(new JLabel(" == "));
			entry.add(new JLabel(globalVariables.get(key).toString()));
			panel.add(entry);
		}
		Dimension size = new Dimension(500,200);
		JScrollPane p = new JScrollPane(panel);
		p.setPreferredSize(size);
		dialogWindow.getContentPane().removeAll();
		dialogWindow.getContentPane().add(p);
		dialogWindow.setLocationRelativeTo(null);
		dialogWindow.setSize(size);
		dialogWindow.setVisible(true);
	}
}
