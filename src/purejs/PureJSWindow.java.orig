/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package purejs;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Map;
import javax.swing.BoxLayout;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.BevelBorder;

/**
 *
 * @author CCHall
 */
public class PureJSWindow extends javax.swing.JFrame {

	private final JSEngineManager engine;
	
	private final JFileChooser fileChooser;
	/**
	 * Creates new form PureJSWindow
	 */
	public PureJSWindow() {
		System.setOut(new PrintStream(new FakeStream(),true));
		System.setErr(new PrintStream(new FakeStream(),true));
		engine = new JSEngineManager();
		fileChooser = new JFileChooser();
		initComponents();
		this.setLocationRelativeTo(null);
		
	}
	
	private class FakeStream extends OutputStream{
		@Override
		public void write(byte[] b, int off, int len) throws IOException {
			ByteBuffer bb = ByteBuffer.wrap(b, off, len);
			CharBuffer decode = Charset.forName("UTF-8").decode(bb);
			outputLogArea.append(decode.toString());
		}
		@Override
		public void write(byte[] b) throws IOException {
			write(b,0,b.length);
		}
		@Override
		public void write(int b) throws IOException{
			byte[] b1 = new byte[1];
			b1[0] = (byte)b;
			write(b1);
		}
		
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputLogArea = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        runButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        scriptArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        seeVarsButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenuItem = new javax.swing.JMenu();
        importFileMenuItem = new javax.swing.JMenuItem();
        resetMenuItem = new javax.swing.JMenuItem();
        quitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pure JS - Javascript without a web browser");
        setPreferredSize(new java.awt.Dimension(800, 600));

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jButton1.setText("Clear Log");

        outputLogArea.setEditable(false);
        outputLogArea.setColumns(20);
        outputLogArea.setRows(5);
        jScrollPane1.setViewportView(outputLogArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 721, Short.MAX_VALUE)
                .addComponent(jButton1))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 78, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 263, Short.MAX_VALUE)
                .addComponent(jButton1))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 46, Short.MAX_VALUE)))
        );

        jSplitPane1.setRightComponent(jPanel2);

        jPanel1.setPreferredSize(new java.awt.Dimension(638, 300));

        runButton.setText("Eval");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        scriptArea.setColumns(20);
        scriptArea.setRows(5);
        jScrollPane2.setViewportView(scriptArea);

        jLabel1.setText("Enter JavaScript here and then click 'Eval':");

        seeVarsButton.setText("See Global Variables");
        seeVarsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeVarsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(seeVarsButton)
                .addGap(18, 18, 18)
                .addComponent(runButton))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 575, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(runButton)
                    .addComponent(seeVarsButton)))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        fileMenuItem.setText("File");

        importFileMenuItem.setText("Import file");
        importFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importFileMenuItemActionPerformed(evt);
            }
        });
        fileMenuItem.add(importFileMenuItem);

        resetMenuItem.setText("Reset script engine");
        resetMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetMenuItemActionPerformed(evt);
            }
        });
        fileMenuItem.add(resetMenuItem);

        quitMenuItem.setText("Quit");
        quitMenuItem.setToolTipText("");
        quitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitMenuItemActionPerformed(evt);
            }
        });
        fileMenuItem.add(quitMenuItem);

        menuBar.add(fileMenuItem);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitMenuItemActionPerformed
        quit();
    }//GEN-LAST:event_quitMenuItemActionPerformed

    private void resetMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetMenuItemActionPerformed
        engine.resetScriptEngine();
    }//GEN-LAST:event_resetMenuItemActionPerformed

    private void importFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importFileMenuItemActionPerformed
		int action = fileChooser.showOpenDialog(this);
		if(action != JFileChooser.CANCEL_OPTION && fileChooser.getSelectedFile() != null){
			File f = fileChooser.getSelectedFile();
			try{
				this.scriptArea.setText(readFile(f));
			} catch(IOException ex){
				handleError(ex);
			}
		}
    }//GEN-LAST:event_importFileMenuItemActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
       evalScript();
    }//GEN-LAST:event_runButtonActionPerformed

    private void seeVarsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeVarsButtonActionPerformed
        showVars();
    }//GEN-LAST:event_seeVarsButtonActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(PureJSWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(PureJSWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(PureJSWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(PureJSWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
        //</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new PureJSWindow().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu fileMenuItem;
    private javax.swing.JMenuItem importFileMenuItem;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTextArea outputLogArea;
    private javax.swing.JMenuItem quitMenuItem;
    private javax.swing.JMenuItem resetMenuItem;
    private javax.swing.JButton runButton;
    private javax.swing.JTextArea scriptArea;
    private javax.swing.JButton seeVarsButton;
    // End of variables declaration//GEN-END:variables

	private void quit() {
		this.setVisible(false);
		this.dispose();
		System.exit(0);
	}

	private void handleError(Exception ex) {
		StringBuilder sb = new StringBuilder();
		sb.append(ex.getMessage());
		if(ex.getMessage().endsWith("\n") == false){
			sb.append("\n");
		}
		for(StackTraceElement e : ex.getStackTrace()){
			sb.append("\t").append(e.toString()).append("\n");
		}
		this.outputLogArea.append(sb.toString());
	}

	private void clearLog(){
		outputLogArea.setText("");
	}
	private String readFile(File f) throws IOException{
		try(FileReader fread = new FileReader(f)){
			BufferedReader in = new BufferedReader(fread);
			StringBuilder sb = new StringBuilder();
			String line;
			while((line = in.readLine()) != null){
				sb.append(line).append("\n");
			}
			return sb.toString();
		}
	}

	private void evalScript() {
		String script = scriptArea.getText();
		outputLogArea.append("\n///////////////////////////////\n");
		outputLogArea.append("Executing script...\n");
		try{
			engine.execute(script);
		}catch(Exception ex){
			this.handleError(ex);
		}
		outputLogArea.append("...script execution complete!");
		outputLogArea.append("\n///////////////////////////////\n");
	}

	
	private JDialog dialogWindow = null;
	private synchronized void showVars() {
		if(dialogWindow == null){
			dialogWindow = new javax.swing.JDialog(this, true);
		}
		Map<String, Object> globalVariables = engine.getGlobalVariables();
		JPanel panel  = new JPanel();
		panel.setLayout(new BoxLayout(panel,BoxLayout.Y_AXIS));
		for(String key : globalVariables.keySet()){
			System.out.println(key+"="+globalVariables.get(key));
			JPanel entry = new JPanel();
			entry.setLayout(new FlowLayout());
			entry.setBorder(new BevelBorder(BevelBorder.RAISED));
			JLabel varLabel = new JLabel(key);
			varLabel.setFont(varLabel.getFont().deriveFont(Font.BOLD));
			entry.add(varLabel);
			entry.add(new JLabel(" == "));
			entry.add(new JLabel(globalVariables.get(key).toString()));
			panel.add(entry);
		}
		Dimension size = new Dimension(500,200);
		JScrollPane p = new JScrollPane(panel);
		p.setPreferredSize(size);
		dialogWindow.getContentPane().removeAll();
		dialogWindow.getContentPane().add(p);
		dialogWindow.setLocationRelativeTo(null);
		dialogWindow.setSize(size);
		dialogWindow.setVisible(true);
	}
}
